{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyFolder\\\\Learning\\\\React\\\\ReactMeals\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = stete.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemCardHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemCartHandler,\n    removeItem: removeItemCardHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","stete","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemCartHandler","removeItemCardHandler","cartContext","addItem","removeItem","children"],"sources":["D:/MyFolder/Learning/React/ReactMeals/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n\r\n    const existingCartItem = stete.items[existingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n  const addItemCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n  const removeItemCardHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemCartHandler,\r\n    removeItem: removeItemCardHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EADgB;EAEvBC,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADtD;IAGA,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC3BJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACQ,EADD,CAA9B;IAIA,MAAMC,gBAAgB,GAAGC,KAAK,CAACd,KAAN,CAAYU,qBAAZ,CAAzB;IACA,IAAIK,YAAJ;;IAEA,IAAIF,gBAAJ,EAAsB;MACpB,MAAMG,WAAW,GAAG,EAClB,GAAGH,gBADe;QAElBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;MAF5B,CAApB;MAKAM,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAACH,KAAV,CAAf;MACAe,YAAY,CAACL,qBAAD,CAAZ,GAAsCM,WAAtC;IACD,CARD,MAQO;MACLD,YAAY,GAAGZ,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmBb,MAAM,CAACG,IAA1B,CAAf;IACD;EACF;;EACD,OAAOR,gBAAP;AACD,CAzBD;;AA2BA,MAAMmB,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCxB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;EAIA,MAAMuB,kBAAkB,GAAIf,IAAD,IAAU;IACnCc,kBAAkB,CAAC;MAAEhB,IAAI,EAAE,KAAR;MAAeE,IAAI,EAAEA;IAArB,CAAD,CAAlB;EACD,CAFD;;EAGA,MAAMgB,qBAAqB,GAAIX,EAAD,IAAQ;IACpCS,kBAAkB,CAAC;MAAEhB,IAAI,EAAE,QAAR;MAAkBO,EAAE,EAAEA;IAAtB,CAAD,CAAlB;EACD,CAFD;;EAIA,MAAMY,WAAW,GAAG;IAClBxB,KAAK,EAAEoB,SAAS,CAACpB,KADC;IAElBC,WAAW,EAAEmB,SAAS,CAACnB,WAFL;IAGlBwB,OAAO,EAAEH,kBAHS;IAIlBI,UAAU,EAAEH;EAJM,CAApB;EAMA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,WAA7B;IAAA,UACGL,KAAK,CAACQ;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}